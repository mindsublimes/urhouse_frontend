{"ast":null,"code":"// property-actions.js\n\nimport PropertyService from '../services/property.service';\nexport const FETCH_PROPERTIES_REQUEST = 'FETCH_PROPERTIES_REQUEST';\nexport const FETCH_PROPERTIES_SUCCESS = 'FETCH_PROPERTIES_SUCCESS';\nexport const FETCH_PROPERTIES_FAILURE = 'FETCH_PROPERTIES_FAILURE';\nexport const UPDATE_PROPERTY_REQUEST = 'UPDATE_PROPERTY_REQUEST';\nexport const UPDATE_PROPERTY_SUCCESS = 'UPDATE_PROPERTY_SUCCESS';\nexport const UPDATE_PROPERTY_FAILURE = 'UPDATE_PROPERTY_FAILURE';\nexport const TOGGLE_FAVORITE_REQUEST = 'TOGGLE_FAVORITE_REQUEST';\nexport const TOGGLE_FAVORITE_SUCCESS = 'TOGGLE_FAVORITE_SUCCESS';\nexport const TOGGLE_FAVORITE_FAILURE = 'TOGGLE_FAVORITE_FAILURE';\nconst fetchPropertiesRequest = () => ({\n  type: FETCH_PROPERTIES_REQUEST\n});\nconst fetchPropertiesSuccess = properties => ({\n  type: FETCH_PROPERTIES_SUCCESS,\n  payload: properties\n});\nconst fetchPropertiesFailure = error => ({\n  type: FETCH_PROPERTIES_FAILURE,\n  payload: error\n});\n\n// Inside property-actions.js\nexport const fetchAllProperties = (page = 1, perPage = 6) => dispatch => {\n  dispatch(fetchPropertiesRequest());\n  PropertyService.getAllProperties(page, perPage).then(response => {\n    dispatch(fetchPropertiesSuccess(response.data));\n  }).catch(error => {\n    dispatch(fetchPropertiesFailure(error.message));\n  });\n};\nconst updatePropertyRequest = () => ({\n  type: UPDATE_PROPERTY_REQUEST\n});\nconst updatePropertySuccess = property => ({\n  type: UPDATE_PROPERTY_SUCCESS,\n  payload: property\n});\nconst updatePropertyFailure = error => ({\n  type: UPDATE_PROPERTY_FAILURE,\n  payload: error\n});\nexport const updateProperty = (propertyId, propertyData) => dispatch => {\n  dispatch(updatePropertyRequest());\n  PropertyService.updateProperty(propertyId, propertyData).then(response => {\n    dispatch(updatePropertySuccess(response.data));\n  }).catch(error => {\n    dispatch(updatePropertyFailure(error.message));\n  });\n};\nconst toggleFavoriteRequest = () => ({\n  type: TOGGLE_FAVORITE_REQUEST\n});\nconst toggleFavoriteSuccess = status => ({\n  type: TOGGLE_FAVORITE_SUCCESS,\n  payload: status\n});\nconst toggleFavoriteFailure = error => ({\n  type: TOGGLE_FAVORITE_FAILURE,\n  payload: error\n});\nexport const toggleFavorite = propertyId => dispatch => {\n  dispatch(toggleFavoriteRequest());\n  PropertyService.toggleFavoriteProperty(propertyId).then(response => {\n    dispatch(toggleFavoriteSuccess(response.data.message));\n    // Assuming the API response contains a \"status\" that indicates \"added\" or \"removed\"\n  }).catch(error => {\n    dispatch(toggleFavoriteFailure(error.message));\n  });\n};","map":{"version":3,"names":["PropertyService","FETCH_PROPERTIES_REQUEST","FETCH_PROPERTIES_SUCCESS","FETCH_PROPERTIES_FAILURE","UPDATE_PROPERTY_REQUEST","UPDATE_PROPERTY_SUCCESS","UPDATE_PROPERTY_FAILURE","TOGGLE_FAVORITE_REQUEST","TOGGLE_FAVORITE_SUCCESS","TOGGLE_FAVORITE_FAILURE","fetchPropertiesRequest","type","fetchPropertiesSuccess","properties","payload","fetchPropertiesFailure","error","fetchAllProperties","page","perPage","dispatch","getAllProperties","then","response","data","catch","message","updatePropertyRequest","updatePropertySuccess","property","updatePropertyFailure","updateProperty","propertyId","propertyData","toggleFavoriteRequest","toggleFavoriteSuccess","status","toggleFavoriteFailure","toggleFavorite","toggleFavoriteProperty"],"sources":["/home/dev-cache/urhouse_frontend/src/actions/property.js"],"sourcesContent":["// property-actions.js\n\nimport PropertyService from '../services/property.service';\n\n\nexport const FETCH_PROPERTIES_REQUEST = 'FETCH_PROPERTIES_REQUEST';\nexport const FETCH_PROPERTIES_SUCCESS = 'FETCH_PROPERTIES_SUCCESS';\nexport const FETCH_PROPERTIES_FAILURE = 'FETCH_PROPERTIES_FAILURE';\nexport const UPDATE_PROPERTY_REQUEST = 'UPDATE_PROPERTY_REQUEST';\nexport const UPDATE_PROPERTY_SUCCESS = 'UPDATE_PROPERTY_SUCCESS';\nexport const UPDATE_PROPERTY_FAILURE = 'UPDATE_PROPERTY_FAILURE';\nexport const TOGGLE_FAVORITE_REQUEST = 'TOGGLE_FAVORITE_REQUEST';\nexport const TOGGLE_FAVORITE_SUCCESS = 'TOGGLE_FAVORITE_SUCCESS';\nexport const TOGGLE_FAVORITE_FAILURE = 'TOGGLE_FAVORITE_FAILURE';\n\n\nconst fetchPropertiesRequest = () => ({\n  type: FETCH_PROPERTIES_REQUEST\n});\n\nconst fetchPropertiesSuccess = (properties) => ({\n  type: FETCH_PROPERTIES_SUCCESS,\n  payload: properties\n});\n\nconst fetchPropertiesFailure = (error) => ({\n  type: FETCH_PROPERTIES_FAILURE,\n  payload: error\n});\n\n// Inside property-actions.js\nexport const fetchAllProperties = (page = 1, perPage = 6) => (dispatch) => {\n  dispatch(fetchPropertiesRequest());\n  PropertyService.getAllProperties(page, perPage)\n    .then(response => {\n      dispatch(fetchPropertiesSuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(fetchPropertiesFailure(error.message));\n    });\n};\n\nconst updatePropertyRequest = () => ({\n  type: UPDATE_PROPERTY_REQUEST\n});\n\nconst updatePropertySuccess = (property) => ({\n  type: UPDATE_PROPERTY_SUCCESS,\n  payload: property\n});\n\nconst updatePropertyFailure = (error) => ({\n  type: UPDATE_PROPERTY_FAILURE,\n  payload: error\n});\n\nexport const updateProperty = (propertyId, propertyData) => (dispatch) => {\n  dispatch(updatePropertyRequest());\n  PropertyService.updateProperty(propertyId, propertyData)\n    .then(response => {\n      dispatch(updatePropertySuccess(response.data));\n    })\n    .catch(error => {\n      dispatch(updatePropertyFailure(error.message));\n    });\n};\n\n\nconst toggleFavoriteRequest = () => ({\n  type: TOGGLE_FAVORITE_REQUEST\n});\n\nconst toggleFavoriteSuccess = (status) => ({\n  type: TOGGLE_FAVORITE_SUCCESS,\n  payload: status\n});\n\nconst toggleFavoriteFailure = (error) => ({\n  type: TOGGLE_FAVORITE_FAILURE,\n  payload: error\n});\n\n\n\nexport const toggleFavorite = (propertyId) => (dispatch) => {\n  dispatch(toggleFavoriteRequest());\n  PropertyService.toggleFavoriteProperty(propertyId)\n      .then(response => {\n          dispatch(toggleFavoriteSuccess(response.data.message)); \n          // Assuming the API response contains a \"status\" that indicates \"added\" or \"removed\"\n      })\n      .catch(error => {\n          dispatch(toggleFavoriteFailure(error.message));\n      });\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}