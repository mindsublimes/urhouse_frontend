{"ast":null,"code":"import axios from \"axios\";\nconst API_URL = \"http://localhost:3003/api/v1/auth/\";\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password\n  });\n};\nconst login = (username, password) => {\n  debugger;\n  const requestData = {\n    user: {\n      email: username,\n      password: password\n    }\n  };\n  return axios.post(API_URL + \"login\", requestData).then(response => {\n    if (response.data.authentication_token) {\n      localStorage.setItem(\"user\", JSON.stringify(response.data));\n    } else {\n      // If login failed, reject the Promise with an error message\n      return Promise.reject(\"Login failed. Please check your credentials.\");\n    }\n    return response.data;\n  }).catch(error => {\n    debugger;\n    // Return an error with a message\n    return Promise.reject(\"Network error. Please try again later.\");\n  });\n};\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\nexport default {\n  register,\n  login,\n  logout\n};","map":{"version":3,"names":["axios","API_URL","register","username","email","password","post","login","requestData","user","then","response","data","authentication_token","localStorage","setItem","JSON","stringify","Promise","reject","catch","error","logout","removeItem"],"sources":["/home/dev-cache/urhouse_frontend/src/services/auth.service.js"],"sourcesContent":["import axios from \"axios\";\n\nconst API_URL = \"http://localhost:3003/api/v1/auth/\";\n\nconst register = (username, email, password) => {\n  return axios.post(API_URL + \"signup\", {\n    username,\n    email,\n    password,\n  });\n};\n\nconst login = (username, password) => {\n  debugger\n  const requestData = {\n    user: {\n      email: username,\n      password: password,\n    },\n  };\n  return axios\n    .post(API_URL + \"login\", requestData)\n    .then((response) => {\n      if (response.data.authentication_token) {\n        localStorage.setItem(\"user\", JSON.stringify(response.data));\n      }else {\n        // If login failed, reject the Promise with an error message\n        return Promise.reject(\"Login failed. Please check your credentials.\");\n      }\n      return response.data;\n    }).catch((error) => {\n      debugger\n      // Return an error with a message\n      return Promise.reject(\"Network error. Please try again later.\");\n    });\n};\n\nconst logout = () => {\n  localStorage.removeItem(\"user\");\n};\n\nexport default {\n  register,\n  login,\n  logout,\n};"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,MAAMC,OAAO,GAAG,oCAAoC;AAEpD,MAAMC,QAAQ,GAAGA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,QAAQ,KAAK;EAC9C,OAAOL,KAAK,CAACM,IAAI,CAACL,OAAO,GAAG,QAAQ,EAAE;IACpCE,QAAQ;IACRC,KAAK;IACLC;EACF,CAAC,CAAC;AACJ,CAAC;AAED,MAAME,KAAK,GAAGA,CAACJ,QAAQ,EAAEE,QAAQ,KAAK;EACpC;EACA,MAAMG,WAAW,GAAG;IAClBC,IAAI,EAAE;MACJL,KAAK,EAAED,QAAQ;MACfE,QAAQ,EAAEA;IACZ;EACF,CAAC;EACD,OAAOL,KAAK,CACTM,IAAI,CAACL,OAAO,GAAG,OAAO,EAAEO,WAAW,CAAC,CACpCE,IAAI,CAAEC,QAAQ,IAAK;IAClB,IAAIA,QAAQ,CAACC,IAAI,CAACC,oBAAoB,EAAE;MACtCC,YAAY,CAACC,OAAO,CAAC,MAAM,EAAEC,IAAI,CAACC,SAAS,CAACN,QAAQ,CAACC,IAAI,CAAC,CAAC;IAC7D,CAAC,MAAK;MACJ;MACA,OAAOM,OAAO,CAACC,MAAM,CAAC,8CAA8C,CAAC;IACvE;IACA,OAAOR,QAAQ,CAACC,IAAI;EACtB,CAAC,CAAC,CAACQ,KAAK,CAAEC,KAAK,IAAK;IAClB;IACA;IACA,OAAOH,OAAO,CAACC,MAAM,CAAC,wCAAwC,CAAC;EACjE,CAAC,CAAC;AACN,CAAC;AAED,MAAMG,MAAM,GAAGA,CAAA,KAAM;EACnBR,YAAY,CAACS,UAAU,CAAC,MAAM,CAAC;AACjC,CAAC;AAED,eAAe;EACbrB,QAAQ;EACRK,KAAK;EACLe;AACF,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}