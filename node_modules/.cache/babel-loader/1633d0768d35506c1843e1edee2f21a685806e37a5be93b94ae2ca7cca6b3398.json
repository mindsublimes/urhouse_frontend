{"ast":null,"code":"var _jsxFileName = \"/home/dev-cache/urhouse_frontend/src/components/PropertyUpdate.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateProperty } from '../actions/property'; // You might need to implement this action\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PropertyUpdate(props) {\n  _s();\n  const {\n    id\n  } = useParams();\n  const propertyId = id; // Extracting the ID from the URL\n\n  const [title, setTitle] = useState('');\n  const [price_per_month, setPricePerMonth] = useState('');\n  const [address, setAddress] = useState('');\n  const [number_of_rooms, setNumberOfRooms] = useState('');\n  const [mrt, setMrt] = useState('');\n  const dispatch = useDispatch();\n\n  // Fetch property data when the component mounts and populate the state\n  useEffect(() => {\n    // Fetch the property details using propertyId and set the state values\n    // ... \n  }, []);\n  const handleSubmit = e => {\n    e.preventDefault();\n    const updatedProperty = {\n      title,\n      price_per_month,\n      address,\n      number_of_rooms,\n      mrt\n    };\n    dispatch(updateProperty(propertyId, updatedProperty));\n    // Redirect to the property list or property detail page after updating\n    props.history.push('/properties');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Update Property\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Update Property\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(PropertyUpdate, \"QX8xT9h2ojFyMoXrq8sL7DMViGs=\", false, function () {\n  return [useParams, useDispatch];\n});\n_c = PropertyUpdate;\nexport default PropertyUpdate;\nvar _c;\n$RefreshReg$(_c, \"PropertyUpdate\");","map":{"version":3,"names":["React","useState","useEffect","useSelector","useDispatch","updateProperty","useParams","jsxDEV","_jsxDEV","PropertyUpdate","props","_s","id","propertyId","title","setTitle","price_per_month","setPricePerMonth","address","setAddress","number_of_rooms","setNumberOfRooms","mrt","setMrt","dispatch","handleSubmit","e","preventDefault","updatedProperty","history","push","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","_c","$RefreshReg$"],"sources":["/home/dev-cache/urhouse_frontend/src/components/PropertyUpdate.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { updateProperty } from '../actions/property'; // You might need to implement this action\nimport { useParams } from 'react-router-dom';\n\nfunction PropertyUpdate(props) {\n  const { id } = useParams(); \n  const propertyId = id // Extracting the ID from the URL\n\n  const [title, setTitle] = useState('');\n  const [price_per_month, setPricePerMonth] = useState('');\n  const [address, setAddress] = useState('');\n  const [number_of_rooms, setNumberOfRooms] = useState('');\n  const [mrt, setMrt] = useState('');\n\n  const dispatch = useDispatch();\n\n  // Fetch property data when the component mounts and populate the state\n  useEffect(() => {\n    // Fetch the property details using propertyId and set the state values\n    // ... \n  }, []);\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n\n    const updatedProperty = {\n      title,\n      price_per_month,\n      address,\n      number_of_rooms,\n      mrt\n    };\n\n  dispatch(updateProperty(propertyId, updatedProperty));\n    // Redirect to the property list or property detail page after updating\n    props.history.push('/properties');\n  };\n\n  return (\n    <div>\n      <h2>Update Property</h2>\n      <form onSubmit={handleSubmit}>\n        {/* ... Form fields for each property attribute ... */}\n        <button type=\"submit\">Update Property</button>\n      </form>\n    </div>\n  );\n}\n\nexport default PropertyUpdate;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,EAAEC,WAAW,QAAQ,aAAa;AACtD,SAASC,cAAc,QAAQ,qBAAqB,CAAC,CAAC;AACtD,SAASC,SAAS,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE7C,SAASC,cAAcA,CAACC,KAAK,EAAE;EAAAC,EAAA;EAC7B,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,CAAC,CAAC;EAC1B,MAAMO,UAAU,GAAGD,EAAE,EAAC;;EAEtB,MAAM,CAACE,KAAK,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACe,eAAe,EAAEC,gBAAgB,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACmB,eAAe,EAAEC,gBAAgB,CAAC,GAAGpB,QAAQ,CAAC,EAAE,CAAC;EACxD,MAAM,CAACqB,GAAG,EAAEC,MAAM,CAAC,GAAGtB,QAAQ,CAAC,EAAE,CAAC;EAElC,MAAMuB,QAAQ,GAAGpB,WAAW,CAAC,CAAC;;EAE9B;EACAF,SAAS,CAAC,MAAM;IACd;IACA;EAAA,CACD,EAAE,EAAE,CAAC;EAEN,MAAMuB,YAAY,GAAIC,CAAC,IAAK;IAC1BA,CAAC,CAACC,cAAc,CAAC,CAAC;IAElB,MAAMC,eAAe,GAAG;MACtBd,KAAK;MACLE,eAAe;MACfE,OAAO;MACPE,eAAe;MACfE;IACF,CAAC;IAEHE,QAAQ,CAACnB,cAAc,CAACQ,UAAU,EAAEe,eAAe,CAAC,CAAC;IACnD;IACAlB,KAAK,CAACmB,OAAO,CAACC,IAAI,CAAC,aAAa,CAAC;EACnC,CAAC;EAED,oBACEtB,OAAA;IAAAuB,QAAA,gBACEvB,OAAA;MAAAuB,QAAA,EAAI;IAAe;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACxB3B,OAAA;MAAM4B,QAAQ,EAAEX,YAAa;MAAAM,QAAA,eAE3BvB,OAAA;QAAQ6B,IAAI,EAAC,QAAQ;QAAAN,QAAA,EAAC;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACxB,EAAA,CA3CQF,cAAc;EAAA,QACNH,SAAS,EASPF,WAAW;AAAA;AAAAkC,EAAA,GAVrB7B,cAAc;AA6CvB,eAAeA,cAAc;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}